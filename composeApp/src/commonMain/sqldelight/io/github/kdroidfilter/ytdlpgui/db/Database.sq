CREATE TABLE IF NOT EXISTS download_history (
  id TEXT NOT NULL PRIMARY KEY,
  url TEXT NOT NULL,
  video_info_json TEXT,
  output_path TEXT,
  is_audio INTEGER NOT NULL,
  is_split INTEGER NOT NULL DEFAULT 0,
  preset_height INTEGER,
  created_at INTEGER NOT NULL
);

-- Inserts a new history entry
insertHistory:
INSERT INTO download_history(id, url, video_info_json, output_path, is_audio, is_split, preset_height, created_at)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

-- Selects all history entries ordered by newest first
selectAllHistory:
SELECT * FROM download_history
ORDER BY created_at DESC;

-- Selects recent history entries ordered by newest first, limited
selectRecentHistory:
SELECT * FROM download_history
ORDER BY created_at DESC
LIMIT ?;

-- Deletes a single history entry by id
deleteHistoryById:
DELETE FROM download_history WHERE id = ?;

-- Clears all history entries
clearHistory:
DELETE FROM download_history;

-- Table for supported sites extracted from yt-dlp extractor directory
CREATE TABLE IF NOT EXISTS supported_sites (
  id TEXT NOT NULL PRIMARY KEY,            -- base name (without .py)
  filename TEXT NOT NULL,                  -- e.g., youtube.py
  download_url TEXT,                       -- raw download URL from GitHub API
  sha TEXT,                                -- file sha from GitHub API
  size INTEGER,                            -- file size
  created_at INTEGER NOT NULL              -- insertion timestamp
);

-- Insert a supported site row
insertSupportedSite:
INSERT INTO supported_sites(id, filename, download_url, sha, size, created_at)
VALUES (?, ?, ?, ?, ?, ?);

-- Select all supported sites
selectAllSupportedSites:
SELECT * FROM supported_sites;

-- Select only supported site ids
selectAllSupportedSiteIds:
SELECT id FROM supported_sites;

-- Count supported sites
countSupportedSites:
SELECT COUNT(*) FROM supported_sites;

-- Clear supported sites
clearSupportedSites:
DELETE FROM supported_sites;
