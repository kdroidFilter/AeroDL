package io.github.kdroidfilter.ytdlp.model

import kotlinx.serialization.Serializable
import kotlinx.serialization.Contextual
import java.time.Duration

/**
 * Represents the metadata for a single video.
 */
@Serializable
data class VideoInfo(
    val id: String,
    val title: String,
    val url: String,
    val thumbnail: String? = null,
    @Contextual val duration: Duration? = null,
    val description: String? = null,
    val uploader: String? = null,
    val uploaderUrl: String? = null,
    val uploadDate: String? = null, // YYYYMMDD format
    val viewCount: Long? = null,
    val likeCount: Long? = null,
    val width: Int? = null,
    val height: Int? = null,
    val fps: Double? = null,
    val formatNote: String? = null,
    val availableSubtitles: Map<String, SubtitleInfo> = emptyMap(),
    val automaticCaptions: Map<String, SubtitleInfo> = emptyMap(),
    val hasChapters: Boolean = false,
    val chapters: List<ChapterInfo> = emptyList(),
    val tags: List<String> = emptyList(),
    val categories: List<String> = emptyList(),
    val directUrl: String? = null,
    val directUrlFormat: String? = null,
    val availableResolutions: Map<Int, ResolutionAvailability> = emptyMap()
)  {
    /**
     * Helper to get all available subtitle languages (both manual and automatic)
     */
    fun getAllSubtitleLanguages(): Set<String> = availableSubtitles.keys

    /**
     * Helper to get all available subtitles with their info (both manual and automatic)
     */
    fun getAllSubtitles(): Map<String, SubtitleInfo> = availableSubtitles + automaticCaptions

    /**
     * Helper to get only manual subtitle languages
     */
    fun getManualSubtitleLanguages(): Set<String> =
        availableSubtitles.filter { !it.value.isAutomatic }.keys

    /**
     * Helper to check if subtitles are available for a specific language
     */
    fun hasSubtitlesFor(language: String): Boolean =
        availableSubtitles.containsKey(language)
}

/**
 * Contains information about available subtitles for a specific language.
 */
@Serializable
data class SubtitleInfo(
    val language: String,
    val languageName: String? = null,
    val formats: List<SubtitleFormat> = emptyList(),
    val autoGenerated: Boolean = false,
    val isAutomatic: Boolean = false
)

/**
 * Represents a specific format (e.g., vtt, srt) of a subtitle file.
 */
@Serializable
data class SubtitleFormat(
    val ext: String,
    val url: String? = null,
    val name: String? = null
)

/**
 * Represents a single chapter within a video.
 */
@Serializable
data class ChapterInfo(
    val title: String? = null,
    val startTime: Double,
    val endTime: Double
)

/**
 * Represents the metadata for a playlist.
 */
@Serializable
data class PlaylistInfo(
    val id: String? = null,
    val title: String? = null,
    val description: String? = null,
    val uploader: String? = null,
    val uploaderUrl: String? = null,
    val entries: List<VideoInfo> = emptyList(),
    val thumbnail: String? = null,
    val entryCount: Int? = null
)

/**
 * Represents the availability of a specific video resolution.
 * @property progressive True if a single file with video and audio is available.
 * @property downloadable True if the resolution can be downloaded (either as progressive or by merging video and audio).
 */
@Serializable
data class ResolutionAvailability(
    val progressive: Boolean,
    val downloadable: Boolean
)